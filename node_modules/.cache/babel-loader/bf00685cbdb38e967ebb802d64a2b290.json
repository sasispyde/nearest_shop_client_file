{"ast":null,"code":"var _jsxFileName = \"/home/developer/Workarea/Sasi/idea1/client/dashboard2/src/components/category/edit_category.js\";\nimport React from 'react';\nimport axios from '../../axios';\nconst url = window.location.href;\nlet id = url.split(\"/\");\nid = id[5];\n\nclass EditCategory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleText = i => e => {\n      let questions = [...this.state.questions];\n      questions[i] = e.target.value;\n      this.setState({\n        questions\n      });\n    };\n\n    this.handleCatName = i => e => {\n      let questions = [...this.state.cat_name];\n      questions[0] = e.target.value;\n      this.setState({\n        cat_name: questions\n      });\n    };\n\n    this.handleDelete = i => e => {\n      e.preventDefault();\n      let questions = [...this.state.questions.slice(0, i), ...this.state.questions.slice(i + 1)];\n      this.setState({\n        questions\n      });\n    };\n\n    this.addQuestion = e => {\n      e.preventDefault();\n      let questions = this.state.questions.concat(['']);\n      this.setState({\n        questions\n      });\n    };\n\n    this.state = {\n      data: [],\n      cat_name: [\"\"],\n      questions: [\"\"]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`/category/edit/${id}`).then(result => {\n      if (result.data.status) {\n        this.setState({\n          data: result.data.data\n        });\n      } else {\n        console.log(result.data.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let index_of_empty_string = this.state.questions.indexOf(\"\");\n    console.log(index_of_empty_string); //if(this.state.cat_name[0] !== \"\" && )\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Categoty Name \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleCatName(0),\n      value: this.state.cat_name[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Add Sub Category\"), this.state.questions.map((question, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Sub Categoty Name \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleText(index),\n      value: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleDelete(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"X\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EditCategory;","map":{"version":3,"sources":["/home/developer/Workarea/Sasi/idea1/client/dashboard2/src/components/category/edit_category.js"],"names":["React","axios","url","window","location","href","id","split","EditCategory","Component","constructor","props","handleText","i","e","questions","state","target","value","setState","handleCatName","cat_name","handleDelete","preventDefault","slice","addQuestion","concat","data","componentDidMount","get","then","result","status","console","log","catch","err","handleSubmit","event","index_of_empty_string","indexOf","render","bind","map","question","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,IAAIC,EAAE,GAAGJ,GAAG,CAACK,KAAJ,CAAU,GAAV,CAAT;AACAD,EAAE,GAAGA,EAAE,CAAC,CAAD,CAAP;;AAEA,MAAME,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA0C;AAGzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SA8BlBC,UA9BkB,GA8BLC,CAAC,IAAIC,CAAC,IAAI;AACnB,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,SAAf,CAAhB;AACAA,MAAAA,SAAS,CAACF,CAAD,CAAT,GAAeC,CAAC,CAACG,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AACZJ,QAAAA;AADY,OAAd;AAGH,KApCiB;;AAAA,SAsClBK,aAtCkB,GAsCFP,CAAC,IAAIC,CAAC,IAAI;AACtB,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWK,QAAf,CAAhB;AACAN,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeD,CAAC,CAACG,MAAF,CAASC,KAAxB;AACA,WAAKC,QAAL,CAAc;AACZE,QAAAA,QAAQ,EAAGN;AADC,OAAd;AAGH,KA5CiB;;AAAA,SA8ClBO,YA9CkB,GA8CHT,CAAC,IAAIC,CAAC,IAAI;AACrBA,MAAAA,CAAC,CAACS,cAAF;AACA,UAAIR,SAAS,GAAG,CACd,GAAG,KAAKC,KAAL,CAAWD,SAAX,CAAqBS,KAArB,CAA2B,CAA3B,EAA8BX,CAA9B,CADW,EAEd,GAAG,KAAKG,KAAL,CAAWD,SAAX,CAAqBS,KAArB,CAA2BX,CAAC,GAAG,CAA/B,CAFW,CAAhB;AAIA,WAAKM,QAAL,CAAc;AACZJ,QAAAA;AADY,OAAd;AAGH,KAvDiB;;AAAA,SAyDlBU,WAzDkB,GAyDJX,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACS,cAAF;AACA,UAAIR,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAAX,CAAqBW,MAArB,CAA4B,CAAC,EAAD,CAA5B,CAAhB;AACA,WAAKP,QAAL,CAAc;AACZJ,QAAAA;AADY,OAAd;AAGH,KA/DiB;;AAEjB,SAAKC,KAAL,GAAa;AACZW,MAAAA,IAAI,EAAG,EADK;AAEZN,MAAAA,QAAQ,EAAG,CAAC,EAAD,CAFC;AAGZN,MAAAA,SAAS,EAAE,CAAC,EAAD;AAHC,KAAb;AAKA;;AAEDa,EAAAA,iBAAiB,GAAE;AAClB3B,IAAAA,KAAK,CAAC4B,GAAN,CAAW,kBAAiBvB,EAAG,EAA/B,EAAkCwB,IAAlC,CAAwCC,MAAD,IAAU;AAChD,UAAGA,MAAM,CAACJ,IAAP,CAAYK,MAAf,EAAsB;AACrB,aAAKb,QAAL,CAAc;AACbQ,UAAAA,IAAI,EAAGI,MAAM,CAACJ,IAAP,CAAYA;AADN,SAAd;AAGA,OAJD,MAIO;AACNM,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACJ,IAAP,CAAYA,IAAxB;AACA;AACD,KARD,EAQGQ,KARH,CAQUC,GAAD,IAAO;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,KAVD;AAWA;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AAClBA,IAAAA,KAAK,CAACf,cAAN;AACA,QAAIgB,qBAAqB,GAAG,KAAKvB,KAAL,CAAWD,SAAX,CAAqByB,OAArB,CAA6B,EAA7B,CAA5B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,qBAAZ,EAHkB,CAIlB;AACA;;AAqCDE,EAAAA,MAAM,GAAE;AACP,WACC,0CACA;AAAM,MAAA,QAAQ,EAAG,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC;AACU,MAAA,IAAI,EAAC,MADf;AAEU,MAAA,QAAQ,EAAE,KAAKtB,aAAL,CAAmB,CAAnB,CAFpB;AAGU,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAoB,CAApB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAOO;AAAQ,MAAA,OAAO,EAAE,KAAKI,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPP,EAQQ,KAAKT,KAAL,CAAWD,SAAX,CAAqB4B,GAArB,CAAyB,CAACC,QAAD,EAAWC,KAAX,KACxB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKjC,UAAL,CAAgBiC,KAAhB,CAFZ;AAGE,MAAA,KAAK,EAAED,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKtB,YAAL,CAAkBuB,KAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADD,CARR,EAmBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBP,EAoBO;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBP,CADA,CADD;AA0BA;;AA/FwC;;AAkG1C,eAAerC,YAAf","sourcesContent":["import React from 'react';\nimport axios from '../../axios';\n\nconst url = window.location.href;\nlet id = url.split(\"/\");\nid = id[5];\n\nclass EditCategory extends React.Component{\n\t\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata : [],\n\t\t\tcat_name : [\"\"],\n\t\t\tquestions: [\"\"]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\taxios.get(`/category/edit/${id}`).then((result)=>{\n\t\t\tif(result.data.status){\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata : result.data.data\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconsole.log(result.data.data)\n\t\t\t}\n\t\t}).catch((err)=>{\n\t\t\tconsole.log(err);\n\t\t})\n\t}\n\n\thandleSubmit(event){\n\t\tevent.preventDefault();\n\t\tlet index_of_empty_string = this.state.questions.indexOf(\"\");\n\t\tconsole.log(index_of_empty_string);\n\t\t//if(this.state.cat_name[0] !== \"\" && )\n\t}\n\n\thandleText = i => e => {\n\t    let questions = [...this.state.questions]\n\t    questions[i] = e.target.value\n\t    this.setState({\n\t      questions\n\t    })\n\t}\n\n\thandleCatName = i => e => {\n\t    let questions = [...this.state.cat_name]\n\t    questions[0] = e.target.value\n\t    this.setState({\n\t      cat_name : questions\n\t    })\n\t}\n\n\thandleDelete = i => e => {\n\t    e.preventDefault()\n\t    let questions = [\n\t      ...this.state.questions.slice(0, i),\n\t      ...this.state.questions.slice(i + 1)\n\t    ]\n\t    this.setState({\n\t      questions\n\t    })\n\t}\n\n\taddQuestion = e => {\n\t    e.preventDefault()\n\t    let questions = this.state.questions.concat([''])\n\t    this.setState({\n\t      questions\n\t    })\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<>\n\t\t\t<form onSubmit={ this.handleSubmit.bind(this) }>\n\t\t\t\t<label>Categoty Name </label>\n\t\t\t\t<input\n\t\t            type=\"text\"\n\t\t            onChange={this.handleCatName(0)}\n\t\t            value={this.state.cat_name[0]}\n\t\t        />\n\t\t        <button onClick={this.addQuestion}>Add Sub Category</button>\n\t\t        {this.state.questions.map((question, index) => (\n\t\t          <div key={index}>\n\t\t          \t<label>Sub Categoty Name </label>\n\t\t            <input\n\t\t              type=\"text\"\n\t\t              onChange={this.handleText(index)}\n\t\t              value={question}\n\t\t            />\n\t\t            <button onClick={this.handleDelete(index)}>X</button>\n\t\t          </div>\n\t\t        ))}\n\t\t        <br />\n\t\t        <input type=\"submit\" />\n\t\t    </form>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default EditCategory"]},"metadata":{},"sourceType":"module"}